#define macro SAFE_OP(op, error_label, comp) = takes(2) returns(1) {
    // takes:              [y, x]
    swap1               // [x, y]
    dup2                // [x, y, x]
    <op>                // [x, x <op> y]
    dup2 dup2           // [x, z, x, z]
    <comp>              // [x, z, z <comp> x]
    <error_label> jumpi // [x, z]
    swap1               // [z, x]
    pop                 // [z]
    // returns:            [z]
}

#define macro SAFE_ADD() = takes(2) returns(1) {
    SAFE_OP(add, global_empty_revert, lt)
}


#define macro SAFE_SUB() = takes(2) returns(1) {
    SAFE_OP(sub, global_empty_revert, gt)
}

#define macro LOAD(offset) = takes(0) returns(1) {
    <offset> calldataload
}


#define macro MAIN() = takes(0) returns(0) {
    LOAD(0x40)
    LOAD(0x00)
    LOAD(0x20)
    SAFE_ADD()
    SAFE_SUB()

        msize mstore
    msize 0x0 return

    global_empty_revert:
        0x0 0x0 revert
}
